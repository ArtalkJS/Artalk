# Goreleaser Config
#
# https://goreleaser.com/quick-start/
# https://goreleaser.com/customization/
# https://goreleaser.com/customization/templates/
# https://goreleaser.com/customization/fury/
# https://goreleaser.com/customization/announce/telegram/

project_name: artalk

env:
  - GO111MODULE=on
  - CGO_ENABLED=1

before:
  hooks:
  # install dependencies
  - make install
  - make build-frontend

# build multi-platform
builds:
  ## ----------------------
  ##        Linux
  ## ----------------------

  # Linux (amd_64)
  - id: linux-amd64
    goos:
      - linux
    goarch:
      - amd64
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: &common_ldflags |
      -X github.com/ArtalkJS/Artalk/internal/config.Version={{.Version}}
      -X github.com/ArtalkJS/Artalk/internal/config.CommitHash={{ .ShortCommit }}
      -s -w

  # Linux (arm_64)
  - id: linux-arm64
    goos:
      - linux
    goarch:
      - arm64
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: *common_ldflags

  # Linux (arm_v7)
  - id: linux-arm7
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - '7'
    env:
      - CC=arm-linux-gnueabihf-gcc
      - CXX=arm-linux-gnueabihf-g++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: *common_ldflags

  ## ----------------------
  ##        macOS
  ## ----------------------

  # Darwin (amd_64)
  - id: darwin-amd64
    goos:
      - darwin
    goarch:
      - amd64
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: *common_ldflags

  # Darwin (arm_64)
  - id: darwin-arm64
    goos:
      - darwin
    goarch:
      - arm64
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: *common_ldflags

  ## ----------------------
  ##         Win
  ## ----------------------

  # Win (amd_64)
  - id: windows-amd64
    goos:
      - windows
    goarch:
      - amd64
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: *common_ldflags
    flags:
      # https://go-review.googlesource.com/c/go/+/224588/
      # https://github.com/ArtalkJS/Artalk/issues/35
      &win_common_flags |
        -tags=timetzdata

  # Win (arm_64)
  - id: windows-arm64
    goos:
      - windows
    goarch:
      - arm64
    env:
      - CC=/llvm-mingw/llvm-mingw/bin/aarch64-w64-mingw32-gcc
      - CXX=/llvm-mingw/llvm-mingw/bin/aarch64-w64-mingw32-g++
    binary: "{{.ProjectName}}"
    main: ./main.go
    ldflags: *common_ldflags
    flags: *win_common_flags

archives:
  - id: artalk
    builds:
      - linux-amd64
      - darwin-amd64
      - windows-amd64
      - windows-arm64
      - linux-arm7
      - linux-arm64
      - darwin-arm64
    name_template: "{{.ProjectName}}_v{{.Version}}_{{.Os}}_{{.Arch}}{{.Arm}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    wrap_in_directory: true
    files:
      - README*
      - LICENSE*
      - artalk.yml

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{.Version}}-SNAPSHOT-{{.ShortCommit}}"

# changelog:
#   sort: asc
#   filters:
#     exclude:
#       - '^docs:'
#       - '^test:'
#       - '^chore:'

release:
  github:
    owner: ArtalkJS
    name: Artalk
  prerelease: auto
  draft: false
