basePath: /api/v2
definitions:
  common.ApiVersionData:
    properties:
      app:
        type: string
      commit_hash:
        type: string
      version:
        type: string
    type: object
  common.ConfData:
    properties:
      frontend_conf:
        $ref: '#/definitions/common.Map'
      img_upload:
        type: boolean
      version:
        $ref: '#/definitions/common.ApiVersionData'
    type: object
  common.JSONResult:
    properties:
      data:
        description: 数据
      msg:
        description: 消息
        type: string
    type: object
  common.Map:
    additionalProperties: true
    type: object
  config.AdminEmailConf:
    properties:
      enabled:
        description: 管理员总开关
        type: boolean
      mail_subject:
        description: 管理员邮件标题
        type: string
      mail_tpl:
        description: 管理员专用邮件模板
        type: string
    type: object
  config.AdminNotifyConf:
    properties:
      bark:
        allOf:
          - $ref: "#/definitions/config.NotifyBarkConf"
        description: bark
      ding_talk:
        allOf:
          - $ref: "#/definitions/config.NotifyDingTalkConf"
        description: 钉钉
      email:
        allOf:
          - $ref: "#/definitions/config.AdminEmailConf"
        description: 邮件通知
      lark:
        allOf:
          - $ref: "#/definitions/config.NotifyLarkConf"
        description: 飞书
      line:
        allOf:
          - $ref: "#/definitions/config.NotifyLINEConf"
        description: LINE
      noise_mode:
        description: 嘈杂模式 (非回复管理员的评论也发送通知)
        type: boolean
      notify_subject:
        description: 通知标题
        type: string
      notify_tpl:
        description: 通知模板
        type: string
      slack:
        allOf:
          - $ref: "#/definitions/config.NotifySlackConf"
        description: slack
      telegram:
        allOf:
          - $ref: "#/definitions/config.NotifyTelegramConf"
        description: TG
      webhook:
        allOf:
          - $ref: "#/definitions/config.NotifyWebHookConf"
        description: WebHook
    type: object
  config.AdminUserConf:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      email:
        type: string
      link:
        type: string
      name:
        type: string
      password:
        type: string
      receive_email:
        type: boolean
      sites:
        items:
          type: string
        type: array
    type: object
  config.AliDMConf:
    properties:
      access_key_id:
        type: string
      access_key_secret:
        type: string
      account_name:
        type: string
      region:
        type: string
    type: object
  config.AliyunAntispamConf:
    properties:
      access_key_id:
        type: string
      access_key_secret:
        type: string
      enabled:
        type: boolean
      region:
        type: string
    type: object
  config.CacheConf:
    properties:
      enabled:
        type: boolean
      expires:
        description: 过期时间
        type: integer
      redis:
        $ref: "#/definitions/config.RedisConf"
      server:
        description: 缓存服务器
        type: string
      type:
        $ref: "#/definitions/config.CacheType"
      warm_up:
        description: 启动时缓存预热
        type: boolean
    type: object
  config.CacheType:
    enum:
      - builtin
      - redis
      - memcache
    type: string
    x-enum-comments:
      CacheTypeBuiltin: 内建缓存
    x-enum-varnames:
      - CacheTypeBuiltin
      - CacheTypeRedis
      - CacheTypeMemcache
  config.CaptchaConf:
    properties:
      action_limit:
        type: integer
      action_reset:
        type: integer
      always:
        type: boolean
      captcha_type:
        $ref: "#/definitions/config.CaptchaType"
      enabled:
        type: boolean
      geetest:
        $ref: "#/definitions/config.GeetestConf"
      hcaptcha:
        $ref: "#/definitions/config.HCaptchaConf"
      recaptcha:
        $ref: "#/definitions/config.ReCaptchaConf"
      turnstile:
        $ref: "#/definitions/config.TurnstileConf"
    type: object
  config.CaptchaType:
    enum:
      - image
      - turnstile
      - recaptcha
      - hcaptcha
      - geetest
    type: string
    x-enum-varnames:
      - TypeImage
      - TypeTurnstile
      - TypeReCaptcha
      - TypeHCaptcha
      - TypeGeetest
  config.Config:
    properties:
      admin_notify:
        allOf:
          - $ref: "#/definitions/config.AdminNotifyConf"
        description: 其他通知方式
      admin_users:
        description: 管理员账户
        items:
          $ref: "#/definitions/config.AdminUserConf"
        type: array
      app_key:
        description: 加密密钥
        type: string
      cache:
        allOf:
          - $ref: "#/definitions/config.CacheConf"
        description: 缓存
      captcha:
        allOf:
          - $ref: "#/definitions/config.CaptchaConf"
        description: 验证码
      cookie:
        allOf:
          - $ref: "#/definitions/config.CookieConf"
        description: Cookie
      db:
        allOf:
          - $ref: "#/definitions/config.DBConf"
        description: 数据库配置
      debug:
        description: 调试模式
        type: boolean
      email:
        allOf:
          - $ref: "#/definitions/config.EmailConf"
        description: 邮箱提醒
      frontend:
        additionalProperties: true
        type: object
      host:
        description: HTTP Server 监听 IP
        type: string
      img_upload:
        allOf:
          - $ref: "#/definitions/config.ImgUploadConf"
        description: 图片上传
      ip_region:
        allOf:
          - $ref: "#/definitions/config.IPRegionConf"
        description: IP 归属地展示
      locale:
        description: 语言
        type: string
      log:
        allOf:
          - $ref: "#/definitions/config.LogConf"
        description: 日志文件
      login_timeout:
        description: 登录超时
        type: integer
      moderator:
        allOf:
          - $ref: "#/definitions/config.ModeratorConf"
        description: 评论审查
      port:
        description: HTTP Server 监听 Port
        type: integer
      site_default:
        description: 默认站点名（当请求无指定 site_name 时使用）
        type: string
      ssl:
        allOf:
          - $ref: "#/definitions/config.SSLConf"
        description: SSL
      timezone:
        description: 时区
        type: string
      trusted_domains:
        description: 可信任的域名 (新)
        items:
          type: string
        type: array
    type: object
  config.CookieConf:
    properties:
      enabled:
        type: boolean
    type: object
  config.DBConf:
    properties:
      charset:
        type: string
      dsn:
        description: 最高优先级
        type: string
      file:
        type: string
      host:
        type: string
      name:
        type: string
      password:
        type: string
      port:
        type: integer
      table_prefix:
        type: string
      type:
        $ref: "#/definitions/config.DBType"
      user:
        type: string
    type: object
  config.DBType:
    enum:
      - mysql
      - sqlite
      - pgsql
      - mssql
    type: string
    x-enum-varnames:
      - TypeMySql
      - TypeSQLite
      - TypePostgreSQL
      - TypeMSSQL
  config.EmailConf:
    properties:
      ali_dm:
        allOf:
          - $ref: "#/definitions/config.AliDMConf"
        description: 阿里云邮件配置
      enabled:
        description: 总开关
        type: boolean
      mail_subject:
        description: 邮件标题
        type: string
      mail_tpl:
        description: 邮件模板
        type: string
      queue:
        allOf:
          - $ref: "#/definitions/config.EmailQueueConf"
        description: 邮件发送队列配置
      send_addr:
        description: 发件人地址
        type: string
      send_name:
        description: 发件人名
        type: string
      send_type:
        allOf:
          - $ref: "#/definitions/config.EmailSenderType"
        description: 发送方式
      smtp:
        allOf:
          - $ref: "#/definitions/config.SMTPConf"
        description: SMTP 配置
    type: object
  config.EmailQueueConf:
    properties:
      buffer_size:
        description: Channel buffer size (default is zero that not create buffer)
        type: integer
    type: object
  config.EmailSenderType:
    enum:
      - smtp
      - ali_dm
      - sendmail
    type: string
    x-enum-varnames:
      - TypeSMTP
      - TypeAliDM
      - TypeSendmail
  config.GeetestConf:
    properties:
      captcha_id:
        type: string
      captcha_key:
        type: string
    type: object
  config.HCaptchaConf:
    properties:
      secret_key:
        type: string
      site_key:
        type: string
    type: object
  config.IPRegionConf:
    properties:
      db_path:
        description: 数据文件路径
        type: string
      enabled:
        description: 启用 IP 归属地展示
        type: boolean
      precision:
        description: 显示精度
        type: string
    type: object
  config.ImgUploadConf:
    properties:
      enabled:
        description: 总开关
        type: boolean
      max_size:
        description: 图片大小限制
        type: integer
      path:
        description: 图片存放路径
        type: string
      public_path:
        description: 图片 URL 基础路径
        type: string
      quality:
        description: 图片质量
        type: string
      upgit:
        allOf:
          - $ref: "#/definitions/config.UpgitConf"
        description: upgit
    type: object
  config.KeyWordsAntispamConf:
    properties:
      enabled:
        type: boolean
      file_sep:
        type: string
      files:
        items:
          type: string
        type: array
      pending:
        type: boolean
      replac_to:
        type: string
    type: object
  config.LogConf:
    properties:
      enabled:
        type: boolean
      filename:
        type: string
    type: object
  config.ModeratorConf:
    properties:
      akismet_key:
        type: string
      aliyun:
        $ref: "#/definitions/config.AliyunAntispamConf"
      api_fail_block:
        description: API 请求错误仍然拦截
        type: boolean
      keywords:
        $ref: "#/definitions/config.KeyWordsAntispamConf"
      pending_default:
        type: boolean
      tencent:
        $ref: "#/definitions/config.TencentAntispamConf"
    type: object
  config.NotifyBarkConf:
    properties:
      enabled:
        type: boolean
      server:
        type: string
    type: object
  config.NotifyDingTalkConf:
    properties:
      enabled:
        type: boolean
      secret:
        type: string
      token:
        type: string
    type: object
  config.NotifyLINEConf:
    properties:
      channel_access_token:
        type: string
      channel_secret:
        type: string
      enabled:
        type: boolean
      receivers:
        items:
          type: string
        type: array
    type: object
  config.NotifyLarkConf:
    properties:
      enabled:
        type: boolean
      webhook_url:
        type: string
    type: object
  config.NotifySlackConf:
    properties:
      enabled:
        type: boolean
      oauth_token:
        type: string
      receivers:
        items:
          type: string
        type: array
    type: object
  config.NotifyTelegramConf:
    properties:
      api_token:
        type: string
      enabled:
        type: boolean
      receivers:
        items:
          type: integer
        type: array
    type: object
  config.NotifyWebHookConf:
    properties:
      enabled:
        type: boolean
      url:
        type: string
    type: object
  config.ReCaptchaConf:
    properties:
      secret_key:
        type: string
      site_key:
        type: string
    type: object
  config.RedisConf:
    properties:
      db:
        description: Redis 默认数据库 0
        type: integer
      network:
        description: tcp or unix
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  config.SMTPConf:
    properties:
      from:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      username:
        type: string
    type: object
  config.SSLConf:
    properties:
      cert_path:
        type: string
      enabled:
        type: boolean
      key_path:
        type: string
    type: object
  config.TencentAntispamConf:
    properties:
      enabled:
        type: boolean
      region:
        type: string
      secret_id:
        type: string
      secret_key:
        type: string
    type: object
  config.TurnstileConf:
    properties:
      secret_key:
        type: string
      site_key:
        type: string
    type: object
  config.UpgitConf:
    properties:
      del_local:
        description: 上传后删除本地的图片
        type: boolean
      enabled:
        description: 启用 upgit
        type: boolean
      exec:
        description: 启动命令
        type: string
    type: object
  entity.CookedComment:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      content:
        type: string
      content_marked:
        type: string
      date:
        type: string
      email_encrypted:
        type: string
      id:
        type: integer
      ip_region:
        type: string
      is_allow_reply:
        type: boolean
      is_collapsed:
        type: boolean
      is_pending:
        type: boolean
      is_pinned:
        type: boolean
      link:
        type: string
      nick:
        type: string
      page_key:
        type: string
      page_url:
        type: string
      rid:
        type: integer
      site_name:
        type: string
      ua:
        type: string
      user_id:
        type: integer
      visible:
        type: boolean
      vote_down:
        type: integer
      vote_up:
        type: integer
    type: object
  entity.CookedNotify:
    properties:
      comment_id:
        type: integer
      id:
        type: integer
      is_emailed:
        type: boolean
      is_read:
        type: boolean
      read_link:
        type: string
      user_id:
        type: integer
    type: object
  entity.CookedPage:
    properties:
      admin_only:
        type: boolean
      id:
        type: integer
      key:
        type: string
      pv:
        type: integer
      site_name:
        type: string
      title:
        type: string
      url:
        type: string
      vote_down:
        type: integer
      vote_up:
        type: integer
    type: object
  entity.CookedSite:
    properties:
      first_url:
        type: string
      id:
        type: integer
      name:
        type: string
      urls:
        items:
          type: string
        type: array
      urls_raw:
        type: string
    type: object
  entity.CookedUser:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      link:
        type: string
      name:
        type: string
      receive_email:
        type: boolean
      site_names:
        items:
          type: string
        type: array
      site_names_raw:
        type: string
    type: object
  entity.CookedUserForAdmin:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      comment_count:
        type: integer
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      is_in_conf:
        type: boolean
      last_ip:
        type: string
      last_ua:
        type: string
      link:
        type: string
      name:
        type: string
      receive_email:
        type: boolean
      site_names:
        items:
          type: string
        type: array
      site_names_raw:
        type: string
    type: object
  handler.Map:
    additionalProperties: true
    type: object
  handler.ParamsAdd:
    properties:
      content:
        description: The comment content
        type: string
      email:
        description: The comment email
        type: string
      link:
        description: The comment link
        type: string
      name:
        description: The comment name
        type: string
      page_key:
        description: The comment page_key
        type: string
      page_title:
        description: The comment page_title
        type: string
      rid:
        description: The comment rid
        type: integer
      site_name:
        description: The site name of your content scope
        type: string
      ua:
        description: The comment ua
        type: string
    required:
    - content
    - page_key
    - site_name
    type: object
  handler.ParamsAdminImport:
    properties:
      assumeyes:
        description: Automatically answer yes for all questions.
        type: boolean
      json_data:
        description: The JSON data
        type: string
      json_file:
        description: The JSON file path
        type: string
      target_site_name:
        description: The target site name
        type: string
      target_site_url:
        description: The target site url
        type: string
      url_resolver:
        description: Enable URL resolver
        type: boolean
    type: object
  handler.ParamsAdminPageEdit:
    properties:
      admin_only:
        description: Edit page admin_only option
        type: boolean
      key:
        description: Edit page key
        type: string
      site_name:
        description: The site name of your content scope
        type: string
      title:
        description: Edit page title
        type: string
    type: object
  handler.ParamsAdminPageFetch:
    properties:
      get_status:
        description: If true, only get the status of the current task status
        type: boolean
      site_name:
        description: The site name of your content scope
        type: string
    type: object
  handler.ParamsAdminSendMail:
    properties:
      body:
        description: The body of email
        type: string
      subject:
        description: The subject of email
        type: string
      to_addr:
        description: The email address of the receiver
        type: string
    required:
    - body
    - subject
    - to_addr
    type: object
  handler.ParamsAdminSettingSave:
    properties:
      yaml:
        description: The content of the config file in YAML format
        type: string
    required:
    - yaml
    type: object
  handler.ParamsAdminSiteAdd:
    properties:
      name:
        description: The site name
        type: string
      urls:
        description: The site urls
        type: string
    required:
    - name
    type: object
  handler.ParamsAdminSiteEdit:
    properties:
      name:
        description: Edit site name
        type: string
      urls:
        description: Edit site urls
        type: string
    type: object
  handler.ParamsAdminUserAdd:
    properties:
      badge_color:
        description: The user badge color (hex format)
        type: string
      badge_name:
        description: The user badge name
        type: string
      email:
        description: The user email
        type: string
      is_admin:
        description: The user is an admin
        type: boolean
      link:
        description: The user link
        type: string
      name:
        description: The user name
        type: string
      password:
        description: The user password
        type: string
      receive_email:
        description: The user receive email
        type: boolean
      site_names:
        description: The site names associated with the user
        type: string
    required:
    - email
    - is_admin
    - name
    - receive_email
    type: object
  handler.ParamsAdminUserEdit:
    properties:
      badge_color:
        description: The user badge color (hex format)
        type: string
      badge_name:
        description: The user badge name
        type: string
      email:
        description: The user email
        type: string
      is_admin:
        description: The user is an admin
        type: boolean
      link:
        description: The user link
        type: string
      name:
        description: The user name
        type: string
      password:
        description: The user password
        type: string
      receive_email:
        description: The user receive email
        type: boolean
      site_names:
        description: The site names associated with the user
        type: string
    required:
    - email
    - is_admin
    - name
    - receive_email
    type: object
  handler.ParamsCaptchaVerify:
    properties:
      value:
        description: The captcha value to check
        type: string
    required:
    - value
    type: object
  handler.ParamsCommentEdit:
    properties:
      content:
        description: The comment content
        type: string
      email:
        description: The comment email
        type: string
      ip:
        description: The comment ip
        type: string
      is_collapsed:
        description: The comment is_collapsed
        type: boolean
      is_pending:
        description: The comment is_pending
        type: boolean
      is_pinned:
        description: The comment is_pinned
        type: boolean
      link:
        description: The comment link
        type: string
      nick:
        description: The comment nick
        type: string
      page_key:
        description: The comment page_key
        type: string
      rid:
        description: The comment rid
        type: string
      site_name:
        description: The site name of your content scope
        type: string
      ua:
        description: The comment ua
        type: string
    type: object
  handler.ParamsLogin:
    properties:
      email:
        description: The user email
        type: string
      name:
        description: The username
        type: string
      password:
        description: The user password
        type: string
    required:
    - email
    - password
    type: object
  handler.ParamsMarkRead:
    properties:
      all_read:
        description: The option if mark all user's notify as read
        type: boolean
      email:
        description: The user email
        type: string
      name:
        description: The username
        type: string
    type: object
  handler.ParamsPV:
    properties:
      page_key:
        description: The page key
        type: string
      page_title:
        description: The page title
        type: string
      site_name:
        description: The site name of your content scope
        type: string
    required:
    - page_key
    type: object
  handler.ParamsVote:
    properties:
      email:
        description: The user email
        type: string
      name:
        description: The username
        type: string
      site_name:
        description: The site name of your content scope
        type: string
    type: object
  handler.ResponseAdd:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      content:
        type: string
      content_marked:
        type: string
      date:
        type: string
      email_encrypted:
        type: string
      id:
        type: integer
      ip_region:
        type: string
      is_allow_reply:
        type: boolean
      is_collapsed:
        type: boolean
      is_pending:
        type: boolean
      is_pinned:
        type: boolean
      link:
        type: string
      nick:
        type: string
      page_key:
        type: string
      page_url:
        type: string
      rid:
        type: integer
      site_name:
        type: string
      ua:
        type: string
      user_id:
        type: integer
      visible:
        type: boolean
      vote_down:
        type: integer
      vote_up:
        type: integer
    type: object
  handler.ResponseAdminPageEdit:
    properties:
      admin_only:
        type: boolean
      id:
        type: integer
      key:
        type: string
      pv:
        type: integer
      site_name:
        type: string
      title:
        type: string
      url:
        type: string
      vote_down:
        type: integer
      vote_up:
        type: integer
    type: object
  handler.ResponseAdminPageFetch:
    properties:
      admin_only:
        type: boolean
      id:
        type: integer
      key:
        type: string
      pv:
        type: integer
      site_name:
        type: string
      title:
        type: string
      url:
        type: string
      vote_down:
        type: integer
      vote_up:
        type: integer
    type: object
  handler.ResponseAdminPageGet:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.CookedPage'
        type: array
      total:
        type: integer
    type: object
  handler.ResponseAdminSettingGet:
    properties:
      yaml:
        type: string
    type: object
  handler.ResponseAdminSettingTpl:
    properties:
      yaml:
        type: string
    type: object
  handler.ResponseAdminSiteAdd:
    properties:
      first_url:
        type: string
      id:
        type: integer
      name:
        type: string
      urls:
        items:
          type: string
        type: array
      urls_raw:
        type: string
    type: object
  handler.ResponseAdminSiteEdit:
    properties:
      first_url:
        type: string
      id:
        type: integer
      name:
        type: string
      urls:
        items:
          type: string
        type: array
      urls_raw:
        type: string
    type: object
  handler.ResponseAdminSiteGet:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.CookedSite'
        type: array
    type: object
  handler.ResponseAdminUserAdd:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      comment_count:
        type: integer
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      is_in_conf:
        type: boolean
      last_ip:
        type: string
      last_ua:
        type: string
      link:
        type: string
      name:
        type: string
      receive_email:
        type: boolean
      site_names:
        items:
          type: string
        type: array
      site_names_raw:
        type: string
    type: object
  handler.ResponseAdminUserEdit:
    properties:
      badge_color:
        type: string
      badge_name:
        type: string
      comment_count:
        type: integer
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      is_in_conf:
        type: boolean
      last_ip:
        type: string
      last_ua:
        type: string
      link:
        type: string
      name:
        type: string
      receive_email:
        type: boolean
      site_names:
        items:
          type: string
        type: array
      site_names_raw:
        type: string
    type: object
  handler.ResponseAdminUserGet:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.CookedUserForAdmin'
        type: array
      total:
        type: integer
    type: object
  handler.ResponseCaptchaGet:
    properties:
      img_data:
        type: string
    type: object
  handler.ResponseCaptchaStatus:
    properties:
      is_pass:
        type: boolean
    type: object
  handler.ResponseCommentEdit:
    properties:
      comment:
        $ref: '#/definitions/entity.CookedComment'
    type: object
  handler.ResponseExport:
    properties:
      artrans:
        description: The exported data which is a JSON string
        type: string
    type: object
  handler.ResponseGet:
    properties:
      api_version:
        $ref: '#/definitions/common.ApiVersionData'
      data:
        items:
          $ref: '#/definitions/entity.CookedComment'
        type: array
      page:
        $ref: '#/definitions/entity.CookedPage'
      total:
        type: integer
      total_roots:
        type: integer
      unread:
        items:
          $ref: '#/definitions/entity.CookedNotify'
        type: array
      unread_count:
        type: integer
    type: object
  handler.ResponseImgUpload:
    properties:
      img_file:
        type: string
      img_url:
        type: string
    type: object
  handler.ResponseImportUpload:
    properties:
      filename:
        description: The uploaded file name which can be used to import
        type: string
    type: object
  handler.ResponseLogin:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/entity.CookedUser'
    type: object
  handler.ResponseLoginStatus:
    properties:
      is_admin:
        type: boolean
      is_login:
        type: boolean
    type: object
  handler.ResponsePV:
    properties:
      pv:
        type: integer
    type: object
  handler.ResponseUserGet:
    properties:
      is_login:
        type: boolean
      unread:
        items:
          $ref: '#/definitions/entity.CookedNotify'
        type: array
      unread_count:
        type: integer
      user:
        $ref: '#/definitions/entity.CookedUser'
    type: object
  handler.ResponseVote:
    properties:
      down:
        type: integer
      up:
        type: integer
    type: object
info:
  contact:
    email: artalkjs@gmail.com
    name: API Support
    url: https://artalk.js.org
  description: Artalk is a modern comment system based on Golang.
  license:
    name: MIT
    url: https://github.com/ArtalkJS/Artalk/blob/master/LICENSE
  title: Artalk API
  version: "2.0"
paths:
  /cache/flush:
    post:
      description: Flush all cache on the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Flush Cache
      tags:
      - Cache
  /cache/warm_up:
    post:
      description: Cache warming helps you to pre-load the cache to improve the performance
        of the first request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Warm-Up Cache
      tags:
      - Cache
  /captcha/get:
    get:
      description: Get a base64 encoded captcha image or a HTML page to verify for
        user
      produces:
      - application/json
      - text/html
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseCaptchaGet'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      summary: Get Captcha
      tags:
      - Captcha
  /captcha/status:
    get:
      description: Get the status of the user's captcha verification
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseCaptchaStatus'
      summary: Get Captcha Status
      tags:
      - Captcha
  /captcha/verify:
    post:
      description: Verify user enters correct captcha code
      parameters:
      - description: The data to check
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsCaptchaVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                img_data:
                  type: string
              type: object
      summary: Verify Captcha
      tags:
      - Captcha
  /comments:
    get:
      description: Get a list of comments by some conditions
      parameters:
      - description: The user email
        in: query
        name: email
        type: string
      - description: Enable flat_mode
        in: query
        name: flat_mode
        type: boolean
      - description: The limit for pagination
        in: query
        name: limit
        type: integer
      - description: The username
        in: query
        name: name
        type: string
      - description: The offset for pagination
        in: query
        name: offset
        type: integer
      - description: The comment page_key
        in: query
        name: page_key
        required: true
        type: string
      - description: Search keywords
        in: query
        name: search
        type: string
      - description: The site name of your content scope
        in: query
        name: site_name
        type: string
      - description: Sort by condition
        enum:
        - date_asc
        - date_desc
        - vote
        in: query
        name: sort_by
        type: string
      - description: Message center show type
        enum:
        - all
        - mentions
        - mine
        - pending
        - admin_all
        - admin_pending
        in: query
        name: type
        type: string
      - description: Only show comments by admin
        in: query
        name: view_only_admin
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseGet'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Comment List
      tags:
      - Comment
    post:
      consumes:
      - application/json
      description: Create a new comment
      parameters:
      - description: The comment data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdd'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create Comment
      tags:
      - Comment
  /comments/{id}:
    delete:
      description: Delete a specific comment
      parameters:
      - description: The comment ID you want to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Comment
      tags:
      - Comment
    put:
      consumes:
      - application/json
      description: Edit a specific comment
      parameters:
      - description: The comment ID you want to edit
        in: path
        name: id
        required: true
        type: integer
      - description: The comment data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsCommentEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseCommentEdit'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Edit Comment
      tags:
      - Comment
  /conf:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ConfData'
      summary: Get System Configs for UI
      tags:
      - System
  /notifies/{comment_id}/{notify_key}/read:
    post:
      consumes:
      - application/json
      description: Mark specific notification as read for user
      parameters:
      - description: The comment id of the notify you want to mark as read
        in: path
        name: comment_id
        required: true
        type: integer
      - description: The key of the notify
        in: path
        name: notify_key
        required: true
        type: string
      - description: The options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsMarkRead'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      summary: Mark Notify as Read
      tags:
      - Notify
  /pages:
    get:
      consumes:
      - application/json
      description: Get a list of pages by some conditions
      parameters:
      - description: The limit for pagination
        in: query
        name: limit
        type: integer
      - description: The offset for pagination
        in: query
        name: offset
        type: integer
      - description: The site name of your content scope
        in: query
        name: site_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminPageGet'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Page List
      tags:
      - Page
  /pages/{id}:
    delete:
      description: Delete a specific page
      parameters:
      - description: The page ID you want to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Page
      tags:
      - Page
    put:
      consumes:
      - application/json
      description: Edit a specific page
      parameters:
      - description: The page ID you want to edit
        in: path
        name: id
        required: true
        type: integer
      - description: The page data
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminPageEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminPageEdit'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Edit Page
      tags:
      - Page
  /pages/{id}/fetch:
    post:
      consumes:
      - application/json
      description: Fetch the data of a specific page
      parameters:
      - description: The page ID you want to fetch
        in: path
        name: id
        required: true
        type: integer
      - description: The options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminPageFetch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminPageFetch'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Fetch Page Data
      tags:
      - Page
  /pages/pv:
    post:
      consumes:
      - application/json
      description: Log and get the number of page views
      parameters:
      - description: The page to record pv
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsPV'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponsePV'
      summary: Record PV
      tags:
      - Page
  /send_email:
    post:
      consumes:
      - application/json
      description: Send an email to test the email sender
      parameters:
      - description: The email data
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminSendMail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Map'
      security:
      - ApiKeyAuth: []
      summary: Send Email
      tags:
      - System
  /settings:
    get:
      description: Get settings from app config file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminSettingGet'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Settings
      tags:
      - System
    post:
      consumes:
      - application/json
      description: Save settings to app config file
      parameters:
      - description: The settings
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminSettingSave'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Save Settings
      tags:
      - System
  /settings/template/{locale}:
    get:
      description: Get config templates in different languages for rendering the settings
        page in the frontend
      parameters:
      - description: The locale of the settings template you want to get
        in: path
        name: locale
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminSettingTpl'
      security:
      - ApiKeyAuth: []
      summary: Get Settings Template
      tags:
      - System
  /sites:
    get:
      description: Get a list of sites by some conditions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminSiteGet'
      security:
      - ApiKeyAuth: []
      summary: Get Site List
      tags:
      - Site
    post:
      consumes:
      - application/json
      description: Create a new site
      parameters:
      - description: The site data
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminSiteAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminSiteAdd'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create Site
      tags:
      - Site
  /sites/{id}:
    delete:
      description: Delete a specific site
      parameters:
      - description: The site ID you want to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Site
      tags:
      - Site
    put:
      consumes:
      - application/json
      description: Edit a specific site
      parameters:
      - description: The site ID you want to edit
        in: path
        name: id
        required: true
        type: string
      - description: The site data
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminSiteEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminSiteEdit'
      security:
      - ApiKeyAuth: []
      summary: Edit Site
      tags:
      - Site
  /stats/{type}:
    get:
      consumes:
      - application/json
      description: Get the statistics of various data analysis
      parameters:
      - description: The type of statistics
        enum:
        - latest_comments
        - latest_pages
        - pv_most_pages
        - comment_most_pages
        - page_pv
        - site_pv
        - page_comment
        - site_comment
        - rand_comments
        - rand_pages
        in: path
        name: type
        required: true
        type: string
      - description: The limit for pagination
        in: query
        name: limit
        type: integer
      - description: multiple page keys separated by commas
        in: query
        name: page_keys
        type: string
      - description: The site name of your content scope
        in: query
        name: site_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.JSONResult'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      summary: Statistic
      tags:
      - Statistic
  /transfer/export:
    get:
      description: Export data from Artalk
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseExport'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Export Artrans
      tags:
      - Transfer
  /transfer/import:
    post:
      consumes:
      - application/json
      description: Import data to Artalk
      parameters:
      - description: The data to import
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminImport'
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Import Artrans
      tags:
      - Transfer
  /transfer/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to prepare to import
      parameters:
      - description: Upload file in preparation for import task
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handler.ResponseImportUpload'
            - properties:
                filename:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Upload Artrans
      tags:
      - Transfer
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file from this endpoint
      parameters:
      - description: Upload file
        in: formData
        name: file
        required: true
        type: file
      - description: The username
        in: formData
        name: name
        required: true
        type: string
      - description: The user email
        in: formData
        name: email
        required: true
        type: string
      - description: The site name of your content scope
        in: formData
        name: site_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseImgUpload'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Upload
      tags:
      - Upload
  /user/access_token:
    post:
      consumes:
      - application/json
      description: Login user by name or email
      parameters:
      - description: The user login data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseLogin'
        "400":
          description: Multiple users with the same email address are matched
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                ' data':
                  properties:
                    need_name_select:
                      items:
                        type: string
                      type: array
                  type: object
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      summary: Get Access Token
      tags:
      - Account
  /user/info:
    get:
      description: Get user info to prepare for login or check current user status
      parameters:
      - description: The user email
        in: query
        name: email
        type: string
      - description: The username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseUserGet'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get User Info
      tags:
      - Account
  /user/status:
    get:
      description: Get user login status by header Authorization
      parameters:
      - description: The user email
        in: query
        name: email
        type: string
      - description: The username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseLoginStatus'
      security:
      - ApiKeyAuth: []
      summary: Get Login Status
      tags:
      - Account
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: The user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminUserAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminUserAdd'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create User
      tags:
      - User
  /users/{id}:
    delete:
      description: Delete a specific user
      parameters:
      - description: The user ID you want to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Edit a specific user
      parameters:
      - description: The user ID you want to edit
        in: path
        name: id
        required: true
        type: integer
      - description: The user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsAdminUserEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminUserEdit'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Edit User
      tags:
      - User
  /users/{type}:
    get:
      consumes:
      - application/json
      description: Get a list of users by some conditions
      parameters:
      - description: The type of users
        enum:
        - all
        - admin
        - in_conf
        in: path
        name: type
        type: string
      - description: The limit for pagination
        in: query
        name: limit
        type: integer
      - description: The offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseAdminUserGet'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get User List
      tags:
      - User
  /version:
    get:
      description: Get the version of Artalk
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.ApiVersionData'
      summary: Get Version Info
      tags:
      - System
  /votes/{type}/{target_id}:
    post:
      consumes:
      - application/json
      description: Vote for a specific comment or page
      parameters:
      - description: The type of vote target
        enum:
        - comment_up
        - comment_down
        - page_up
        - page_down
        in: path
        name: type
        required: true
        type: string
      - description: Target comment or page ID you want to vote for
        in: path
        name: target_id
        required: true
        type: integer
      - description: The vote data
        in: body
        name: vote
        required: true
        schema:
          $ref: '#/definitions/handler.ParamsVote'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseVote'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      summary: Vote
      tags:
      - Vote
  /votes/sync:
    post:
      description: Sync the number of votes in the `comments` or `pages` data tables
        to keep them the same as the `votes` table
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Map'
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/handler.Map'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Sync Vote Data
      tags:
      - Vote
securityDefinitions:
  ApiKeyAuth:
    description: '"Type ''Bearer TOKEN'' to correctly set the API Key"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
