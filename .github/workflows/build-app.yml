name: Build App

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      dry_run:
        required: true
        type: boolean

env:
  GO_VERSION: 1.22.1
  PKG_NAME: github.com/ArtalkJS/Artalk
  DOCKER_IMG: ghcr.io/goreleaser/goreleaser-cross
  CACHE_DIR: /tmp/cache/docker-image

jobs:
  build_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
          # `go-releaser` will read the semver version from git tag name
          # `git-chglog` will diff the tag and generate changelog
          fetch-depth: 0

      # disable cache because the err `no space left on device`
      # - name: Docker Image Cache
      #   id: docker-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ env.CACHE_DIR }}
      #     key: docker-image-go-cross-${{ env.GO_VERSION }}

      - name: Pull Docker Image
        # if: steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          docker pull "${DOCKER_IMG}:v${GO_VERSION}"

          # mkdir -p "${CACHE_DIR}"
          # docker save -o "${CACHE_DIR}/go-cross.tar" "${DOCKER_IMG}:v${GO_VERSION}"

      # - name: Restore Docker Image from Cache
      #   if: steps.docker-cache.outputs.cache-hit == 'true'
      #   run: docker load -i ${CACHE_DIR}/go-cross.tar

      - name: Setup git-chglog
        run: |
          curl -sL $(curl -s https://api.github.com/repos/git-chglog/git-chglog/releases/latest \
            | grep -oP '"https://.+linux_amd64.tar.gz"' | tr -d \") | tar -C /usr/local/bin -xz git-chglog
          git-chglog --version

      - name: Pre Build
        run: |-
          mkdir -p local

          # github token
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" > local/.release-env

          # changelog
          git-chglog --config .github/chglog/config.yml ${{ inputs.version }} > local/release-notes.md

          # copy config file
          cp conf/artalk.example.yml artalk.yml

      - name: Print Relase Notes
        run: cat local/release-notes.md

      - name: Build and Release
        run: |
          docker run \
            --rm \
            --privileged \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $(pwd)/sysroot:/sysroot \
            -v $(pwd):/go/src/${PKG_NAME} \
            -w /go/src/${PKG_NAME} \
            -e CGO_ENABLED=1 \
            --env-file local/.release-env \
            ghcr.io/goreleaser/goreleaser-cross:v${GO_VERSION} \
            release --release-notes local/release-notes.md ${{ inputs.dry_run && '--skip=publish' || '' }}
