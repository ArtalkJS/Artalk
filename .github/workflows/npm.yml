# https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages
name: NPM Publish

on:
  push:
    tags:
      - v*

jobs:
  publish:
    # prevents this action from running on forks
    if: github.repository == 'ArtalkJS/Artalk'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use pnpm
      uses: pnpm/action-setup@v2.2.2
      with:
        version: 7.11.0

    - name: Set node version to 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: https://registry.npmjs.org/
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Build
      run: pnpm build

    - name: Publish
      run: cd packages/artalk && pnpm publish --no-git-checks
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # GitHub Packages
    #
    # Setup .npmrc file to publish to GitHub Packages
    # - uses: actions/setup-node@v2
    #   with:
    #     registry-url: 'https://npm.pkg.github.com'
    # # Publish to GitHub Packages
    # - run: npm publish
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Docs Update
  docs-update:
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Checkout ArtalkDocs
        uses: actions/checkout@v3
        with:
          repository: ArtalkJS/Docs
          token: ${{ secrets.PAT }}

      - name: Update CDN links
        run: |
          sed -i 's#artalk@.[^/]*#artalk@${{ steps.get_version.outputs.VERSION }}#g' docs/code/ArtalkCDN.json
          perl -pi -e 's#"Artalk"(\W+)?:(\W+)?".*?"#"Artalk": "${{ steps.get_version.outputs.VERSION }}"#g' docs/code/ArtalkVersion.json
          sed -i 's#artalk@.[^/]*#artalk@${{ steps.get_version.outputs.VERSION }}#g' docs/code/quick-start/cdn.html

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update Artalk CDN link to v${{ steps.get_version.outputs.VERSION }}
